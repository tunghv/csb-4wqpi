{"version":3,"sources":["lib.js","Star.js","StarRating.js","Color.js","ColorList.js","AddColorForm.js","App.js","index.js"],"names":["createArray","length","Object","toConsumableArray","Array","Star","_ref","_ref$selected","selected","_ref$onSelect","onSelect","f","react_default","a","createElement","index_esm","color","onClick","StarRating","_ref$totalStars","totalStars","_ref$selectedStars","selectedStars","_ref$onRate","onRate","Fragment","map","n","i","key","Color","id","title","rating","_ref$onRemove","onRemove","style","height","backgroundColor","ColorList","_ref$colors","colors","_ref$onRemoveColor","onRemoveColor","_ref$onRateColor","onRateColor","assign","AddColorForm","_ref$onNewColor","onNewColor","txtTitle","useRef","hexColor","onSubmit","e","preventDefault","current","value","ref","type","placeholder","required","App","_useState","useState","colorData","_useState2","slicedToArray","setColors","alert","concat","newColors","filter","objectSpread2","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65ff8b9d.chunk.js","sourcesContent":["export const createArray = length => [...Array(length)];\n","import React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\n\nexport default function Star({ selected = false, onSelect = f => f }) {\n  return <FaStar color={selected ? \"red\" : \"grey\"} onClick={onSelect} />;\n}\n","import React from \"react\";\nimport { createArray } from \"./lib\";\nimport Star from \"./Star\";\n\nexport default function StarRating({\n  totalStars = 5,\n  selectedStars = 0,\n  onRate = f => f\n}) {\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n          onSelect={() => onRate(i + 1)}\n        />\n      ))}\n      <p>\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\nimport StarRating from \"./StarRating\";\nimport { FaTrash } from \"react-icons/fa\";\n\nexport default function Color({\n  id,\n  title,\n  color,\n  rating,\n  onRemove = f => f,\n  onRate = f => f\n}) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      <button onClick={() => onRemove(id)}>\n        <FaTrash />\n      </button>\n      <div style={{ height: 50, backgroundColor: color }} />\n      <StarRating\n        selectedStars={rating}\n        onRate={rating => onRate(id, rating)}\n      />\n    </section>\n  );\n}\n","import React from \"react\";\nimport Color from \"./Color\";\n\nexport default function ColorList({\n  colors = [],\n  onRemoveColor = f => f,\n  onRateColor = f => f\n}) {\n  if (!colors.length) return <div>No Colors Listed. (Add a Color)</div>;\n\n  return (\n    <div>\n      {colors.map(color => (\n        <Color\n          key={color.id}\n          {...color}\n          onRemove={onRemoveColor}\n          onRate={onRateColor}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\n\nexport default function AddColorForm({ onNewColor = f => f }) {\n  const txtTitle = useRef();\n  const hexColor = useRef();\n\n  const submit = e => {\n    e.preventDefault();\n    const title = txtTitle.current.value;\n    const color = hexColor.current.value;\n    onNewColor(title, color);\n    txtTitle.current.value = \"\";\n    hexColor.current.value = \"\";\n  };\n\n  return (\n    <form onSubmit={submit}>\n      <input ref={txtTitle} type=\"text\" placeholder=\"color title...\" required />\n      <input ref={hexColor} type=\"color\" required />\n      <button>ADD</button>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport colorData from \"./color-data.json\";\nimport ColorList from \"./ColorList.js\";\nimport AddColorForm from \"./AddColorForm\";\n\nexport default function App() {\n  const [colors, setColors] = useState(colorData);\n\n  const removeColor = id => {\n    const newColors = colors.filter(color => color.id !== id);\n    setColors(newColors);\n  };\n\n  const rateColor = (id, rating) => {\n    const newColors = colors.map(color =>\n      color.id === id ? { ...color, rating } : color\n    );\n    setColors(newColors);\n  };\n\n  return (\n    <>\n      <AddColorForm\n        onNewColor={(title, color) => alert(`TODO: Create ${title} - ${color}`)}\n      />\n      <ColorList\n        colors={colors}\n        onRemoveColor={removeColor}\n        onRateColor={rateColor}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}